@model IEnumerable<TrabajoProyecto.Models.Alumno>
@{
    ViewData["Title"] = "Index";
}

<!-- Modal -->
<div class="modal fade" id="ModalAlumno" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar Alumno</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="AlumnoID" value="0"/>
                <div>
                    <label class="control-label">Nombre Completo</label>
                    <input type="text" class="form-control" id="NombreCompleto" autocomplete="off"
                        onkeyup="this.value = this.value.toUpperCase()" required />
                </div>
                                <div>
    <label class="control-label">D.N.I</label>
    <input type="text" class="form-control" id="DNIEstudiante" autocomplete="off"
        onkeyup="validarDNI(this)" required />
    <span id="dni-error" class="text-danger"></span>

</div>
                <div>
                    <label class="control-label">Fecha</label>
                    <input type="date" id="Fecha" name="Fecha" class="form-control input-centrar2" required />
                    <span class="text-danger"></span> <!-- Mensaje de error de fecha -->
                </div>
                 <div>
                    <label class="control-label">Dirrecion</label>
                    <input type="text" class="form-control" id="DirrecionEstudiante" autocomplete="off"
                        onkeyup="this.value = this.value.toUpperCase()" required />
                </div>
                  <div>
                    <label class="control-label">Correo</label>
                    <input type="text" class="form-control" id="CorreoEstudiante" autocomplete="off"
                        onkeyup="this.value = this.value.toUpperCase()" required />
                </div> 
                 <div>
          <label class="control-label">
            Carrera
          </label>
         @Html.DropDownList("CarreraID", null, "-- SELECCIONE UNA CARRERA --", new {@class="form-control"})
        </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="button" onclick="GuardarAlumno()" class="btn btn-primary">Guardar Cambios</button>
                </div>
            </div>
        </div>
    </div>
</div>

<h1>Index</h1>

<div>
    <h1 class="display-4">Alumnos</h1>

    @{
        if (User.Identity.IsAuthenticated)
        {
            <div class="mb-2">
                <button type="button" onclick="VaciarFormulario()" class="btn btn-primary boton2" data-bs-toggle="modal"
                    data-bs-target="#ModalAlumno">
                    Nuevo
                </button>
            </div>
        }
        else
        {
        }
    }

    <table class="table table-bordered table-striped table-condensed">
    <thead>
        <tr>
            <th>Nombre Completo</th>
            <th>Dirreccion</th>
            <th>Fecha</th>
            <th>Carrera</th>
            <th>D.N.I</th>
            <th>Correo</th>
        </tr>
      
    </thead>
        <tbody id="tbody-alumno">        
        </tbody>
  </table>
</div>

    @section Scripts{
        <script src="~/js/alumno.js"></script>

         <script>

function esNumerico(valor) {
    if (valor.trim() === '') {
        return false;
    }

    return !isNaN(valor);
}

function validarDNI(input) {
    const valor = input.value;
    const dniError = document.getElementById("dni-error");

    if (!esNumerico(valor)) {
        dniError.textContent = 'El DNI debe ser un valor numérico en forma de cadena.';
        input.value = '';
    } else {
        dniError.textContent = ''; // Borra el mensaje de error si es válido.
    }
}


        </script>

        @* <script>
            $(document).ready(function () {
                // Obtener los elementos DOM del campo de fecha y del mensaje de error
                const fechaInput = document.getElementById('fecha-input');
                const fechaError = document.getElementById('fecha-error');

                // Agregar un evento de escucha para detectar cambios en el campo de fecha
                fechaInput.addEventListener('input', function () {
                    const value = fechaInput.value;
                    const parsedDate = dateFns.parse(value, 'dd-MM-yyyy', new Date());

                    // Validar si la fecha ingresada es válida
                    if (dateFns.isValid(parsedDate)) {
                        fechaError.textContent = ''; // Borra cualquier mensaje de error
                    } else {
                        fechaError.textContent = 'Fecha no válida'; // Muestra un mensaje de error
                    }
                });
            });

        </script> *@
    }
